{"version":3,"sources":["components/home/Home.js","components/layout/Header.js","actions/productsActions.js","env_variable.js"],"names":["Home","props","addProductToCart","product","setState","itemAddedToCart","products","cart","length","selectedItem","filter","item","name","qty","addItemToCart","handleClose","_","_sortProducts","type","sort","a","b","parseFloat","price","actual","discount","_sortProductsOnMobile","isDailogOpen","handleDialog","_sortProductsbyField","field","sortField","_setSortProductOption","displayProducts","state","map","index","key","xs","md","lg","alt","src","image","className","display","variant","onClick","searchProducts","searchStr","searchResults","toLowerCase","includes","setSearchResults","getProducts","handleChange","e","target","value","errors","this","style","flexGrow","only","container","spacing","direction","justify","alignItems","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","size","aria-label","color","fontSize","aria-labelledby","aria-describedby","id","onChange","control","label","nextProps","prevState","newState","Component","mapDispatchToProps","dispatchErrors","connect","HeaderBar","toggleDrawer","history","push","getProductCount","totalProducts","forEach","_searchProducts","searchText","edge","placeholder","disableUnderline","inputProps","withRouter","dispatch","LOADING_ENABLE","payload","axios","get","then","response","GET_PRODUCTS","data","items","catch","err","errorPayload","GET_ERRORS","ADD_PRODUCT_TO_CART","resetCart","RESET_CART"],"mappings":"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","file":"static/js/6.1956c98f.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n// import { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  Grid, Card, CardContent, Typography, Button,\r\n  IconButton, Snackbar, Hidden, Dialog, DialogContent,\r\n  DialogTitle, DialogContentText, Radio, RadioGroup,\r\n  FormControlLabel\r\n} from '@material-ui/core/'\r\n\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SortByAlphaIcon from '@material-ui/icons/SortByAlpha';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport CustomHeader from '../layout/Header';\r\n\r\nimport { getProducts, addItemToCart, setSearchResults, dispatchErrors } from '../../actions/productsActions';\r\n\r\nimport './home.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      products: '',\r\n      itemAddedToCart: false,\r\n      sortField: 'high',\r\n      isDailogOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProducts();\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newState = { ...prevState };\r\n    if (nextProps.products.products) {\r\n      newState.products = nextProps.products.products;\r\n    }\r\n    return newState;\r\n  }\r\n\r\n  addProductToCart = product => {\r\n    this.setState({\r\n      itemAddedToCart: true\r\n    })\r\n\r\n    if (this.props.products.cart.length > 0) {\r\n      let selectedItem = this.props.products.cart.filter(item => item.name === product.name);\r\n      if (selectedItem.length > 0) {\r\n        selectedItem[selectedItem.length - 1].qty = selectedItem[selectedItem.length - 1].qty + 1;\r\n        product.qty = selectedItem[selectedItem.length - 1].qty;\r\n        this.props.addItemToCart(product);\r\n      }\r\n      else {\r\n        product.qty = 1;\r\n        this.props.addItemToCart(product);\r\n      }\r\n    }\r\n    else {\r\n      product.qty = 1;\r\n      this.props.addItemToCart(product);\r\n    }\r\n  }\r\n\r\n  handleClose = _ => {\r\n    this.setState({\r\n      itemAddedToCart: false\r\n    })\r\n  }\r\n\r\n  _sortProducts = (type, products) => {\r\n    if (type === 'high') {\r\n      return products.sort((a, b) => parseFloat(b.price.actual) - parseFloat(a.price.actual));\r\n    }\r\n    else if (type === 'low') {\r\n      return products.sort((a, b) => parseFloat(a.price.actual) - parseFloat(b.price.actual));\r\n    }\r\n    else if (type === 'discount') {\r\n      return products.sort((a, b) => parseFloat(b.discount) - parseFloat(a.discount));\r\n    }\r\n  }\r\n\r\n  _sortProductsOnMobile = _ => {\r\n    this.setState({\r\n      isDailogOpen: true\r\n    })\r\n  }\r\n\r\n  handleDialog = _ => {\r\n    this.setState({\r\n      isDailogOpen: false\r\n    })\r\n  }\r\n\r\n  _sortProductsbyField = field => {\r\n    this.setState({\r\n      sortField: field\r\n    })\r\n  }\r\n\r\n  _setSortProductOption = field => {\r\n    this.setState({\r\n      sortField: field,\r\n      isDailogOpen: false\r\n    })\r\n  }\r\n\r\n  displayProducts = _ => {\r\n    let { products, sortField } = this.state;\r\n    products = this._sortProducts(sortField, products);\r\n    return products.map((product, index) => {\r\n      return (\r\n        <Fragment key={product.name}>\r\n          <Grid item xs={12} md={3} lg={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                  <img alt={product.name} src={product.image} className=\"product-img\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={12} lg={12}>{product.name}</Grid>\r\n                <Grid item xs={12} md={12} lg={12} className=\"prod-price-details\">\r\n                  &#x20b9; {product.price.actual}\r\n                  &nbsp;<strike>{product.price.display}</strike>&nbsp;<span className=\"prod-discount\">{product.discount}%off</span>\r\n                </Grid>\r\n                <Button variant=\"contained\" onClick={() => this.addProductToCart(product)}>\r\n                  Add to cart\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Fragment>\r\n      )\r\n    });\r\n  };\r\n\r\n  searchProducts = searchStr => {\r\n    let { products } = this.state;\r\n    const searchResults = products.filter((product) => product.name.toLowerCase().includes(searchStr.toLowerCase()));\r\n    if (searchStr.length >= 3) {\r\n      this.props.setSearchResults(searchResults)\r\n    }\r\n    else {\r\n      this.props.getProducts();\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    // this._sortProductsbyField(e.target.value);\r\n    this.setState({\r\n      sortField: e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { products, itemAddedToCart, sortField, isDailogOpen } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <CustomHeader cart={this.props.cart} searchProducts={this.searchProducts} />\r\n        <div className=\"main-container\">\r\n          <Typography className=\"home-container\" variant=\"h6\" style={{ flexGrow: 1 }}>\r\n            <Hidden only={['xs']}>\r\n              <Grid container>\r\n                <Grid item lg={1}>\r\n                  Sort By\r\n                </Grid>\r\n                <Grid item lg={2}>\r\n                  <span className={sortField === 'high' ? \"select\" : \"unselect\"} onClick={() => this._sortProductsbyField('high')}>Price -- High Low</span>\r\n                </Grid>\r\n                <Grid item lg={2}>\r\n                  <span className={sortField === 'low' ? \"select\" : \"unselect\"} onClick={() => this._sortProductsbyField('low')}>Price -- Low High</span>\r\n                </Grid>\r\n                <Grid item lg={2}>\r\n                  <span className={sortField === 'discount' ? \"select\" : \"unselect\"} onClick={() => this._sortProductsbyField('discount')}>Discount</span>\r\n                </Grid>\r\n                <Grid item lg={3}>&nbsp;</Grid>\r\n                <Grid item lg={2}>&nbsp;</Grid>\r\n              </Grid>\r\n            </Hidden>\r\n            <Hidden only={['lg']}>\r\n              <Grid container>\r\n                <Grid item xs={6} className=\"text-center\">\r\n                  <SortByAlphaIcon onClick={this._sortProductsOnMobile} /> Sort\r\n                </Grid>\r\n                <Grid item xs={6} className=\"text-center\">\r\n                  <FilterListIcon /> Filter\r\n                </Grid>\r\n              </Grid>\r\n            </Hidden>\r\n            <br />\r\n            <Grid container item xs={12} md={12} spacing={2}\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\">\r\n              {products && this.displayProducts()}\r\n            </Grid>\r\n            <Grid container item xs={12} md={12} spacing={2}\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\">\r\n              {products.length === 0 && 'No products found...'}\r\n            </Grid>\r\n          </Typography>\r\n        </div>\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={itemAddedToCart}\r\n          autoHideDuration={500}\r\n          onClose={this.handleClose}\r\n          message=\"Item added to cart\"\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n\r\n        <Dialog\r\n          open={isDailogOpen} onClose={() => this.handleDialog(false)} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            <b> Sorting Options</b>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              <RadioGroup aria-label=\"sortoptions\" name=\"sortoptions\" value={sortField} onChange={this.handleChange}>\r\n                <FormControlLabel value=\"high\" control={<Radio />} label=\"Price -- High Low\" />\r\n                <FormControlLabel value=\"low\" control={<Radio />} label=\"Price -- Low High\" />\r\n                <FormControlLabel value=\"discount\" control={<Radio />} label=\"Discount\" />\r\n              </RadioGroup>\r\n              <Button variant=\"outlined\" onClick={() => this.handleDialog(false)} color=\"primary\">Cancel</Button>\r\n              <Button variant=\"outlined\" onClick={() => this._setSortProductOption(sortField)} className=\"apply-btn\" color=\"primary\">Apply</Button>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  dispatchErrors: PropTypes.func.isRequired,\r\n  getProducts: PropTypes.func.isRequired,\r\n  addItemToCart: PropTypes.func.isRequired,\r\n  setSearchResults: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  products: state.products,\r\n  cart: state.products.cart\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProducts,\r\n  addItemToCart,\r\n  dispatchErrors,\r\n  setSearchResults\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { AppBar, Input, Typography, IconButton, Grid } from '@material-ui/core';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nimport './Header.css'\r\n\r\nclass HeaderBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: ''\r\n    }\r\n\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.props.history.push('/home');\r\n  }\r\n\r\n  getProductCount = () => {\r\n    let totalProducts = 0;\r\n    this.props.cart.forEach(product => {\r\n      totalProducts = totalProducts + product.qty;\r\n    });\r\n    return totalProducts;\r\n  }\r\n\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    }, () => this._searchProducts());\r\n  };\r\n\r\n  _searchProducts = _ => {\r\n    let { searchText } = this.state;\r\n    this.props.searchProducts(searchText);\r\n  }\r\n\r\n  render() {\r\n    let { searchText } = this.state;\r\n    return (\r\n      <AppBar className=\"header-container\" >\r\n        <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n          <Grid container >\r\n            <Grid item xs={2} md={1}>\r\n              <IconButton className=\"icon-btn\" onClick={this.toggleDrawer} edge=\"start\" color=\"inherit\" aria-label=\"Menu\">\r\n                <StarIcon />\r\n              </IconButton>\r\n\r\n            </Grid>\r\n            <Grid item xs={1} md={8} className=\"site-name\">\r\n              &nbsp;\r\n            </Grid>\r\n            <Grid item xs={9} md={3} className=\"right-btns\">\r\n              <Input placeholder=\"Search\" disableUnderline={true} name=\"searchText\" onChange={this.onChange} value={searchText} inputProps={{ 'aria-label': 'search' }} />\r\n              <SearchIcon className=\"icon-spacing\" onClick={this._searchProducts} />\r\n              <ShoppingCartIcon onClick={() => this.props.history.push('./cart')} className=\"icon-spacing\" />{this.props.cart.length > 0 && (<span className=\"cart-items-cnt\">{this.getProductCount()}</span>)}\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </AppBar >\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter((HeaderBar));\r\n\r\n","import axios from 'axios';\r\nimport {\r\n  GET_PRODUCTS,\r\n  GET_ERRORS,\r\n  ADD_PRODUCT_TO_CART,\r\n  LOADING_ENABLE,\r\n  RESET_CART\r\n} from './types';\r\n\r\nimport { PRODUCTS_Endpoint as enAPI } from '../env_variable';\r\n\r\n// Get products list\r\nexport const getProducts = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ENABLE,\r\n    payload: true\r\n  });\r\n  let productsApi = enAPI;\r\n  axios\r\n    .get(productsApi)\r\n    .then(response => {\r\n      dispatch({\r\n        type: GET_PRODUCTS,\r\n        payload: response.data.items\r\n      });\r\n      dispatch({\r\n        type: LOADING_ENABLE,\r\n        payload: false\r\n      });\r\n    })\r\n    .catch(err => {\r\n      let errorPayload;\r\n      errorPayload = {\r\n        message: 'Products fetching error'\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errorPayload\r\n      });\r\n      dispatch({\r\n        type: LOADING_ENABLE,\r\n        payload: false\r\n      });\r\n    });\r\n};\r\n\r\n// Set the product to cart\r\nexport const addItemToCart = (product) => dispatch => {\r\n  dispatch({\r\n    type: ADD_PRODUCT_TO_CART,\r\n    payload: product\r\n  });\r\n}\r\n\r\nexport const setSearchResults = (products) => dispatch => {\r\n  dispatch({\r\n    type: GET_PRODUCTS,\r\n    payload: products\r\n  });\r\n}\r\n\r\nexport const resetCart = () => dispatch => {\r\n  dispatch({\r\n    type: RESET_CART,\r\n    payload: []\r\n  });\r\n}\r\n\r\n// Set Errors across redux\r\nexport const dispatchErrors = errorPayload => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: errorPayload\r\n  };\r\n};","export const PRODUCTS_Endpoint = 'https://api.jsonbin.io/b/5f6b6cd665b18913fc51f71f';\r\n\r\n"],"sourceRoot":""}